#include<bits/stdc++.h>
#ifndef ONLINE_JUDGE
#include "LOCAL_DEBUG.h"
#endif
#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL);

using namespace std;

tuple<int, int, int> nextday(int d, int m, int y) {
	int dd, mm;
	if (m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 ) {
		if (d == 31)
			dd = 1, mm = m + 1;
		else
			dd = d + 1, mm = m;
	}
	else if (m == 12) {
		if (d == 31)
			dd = 1, mm = 1, ++y;
		else
			dd = d + 1, mm = m;
	}
	else if (m == 2) {
		if (d == 29)
			dd = 1, mm = m + 1;
		else if (d == 28) {
			bool b = false;
			if (y % 4 == 0) {
				if (y % 400 == 0)
					b = true;
				else if (y % 100 != 0)
					b = true;
			}
			if (b)
				dd = d + 1, mm = m;
			else
				dd = 1, mm = m + 1;
		}
		else
			dd = d + 1, mm = m;
	}
	else {
		if (d == 30)
			dd = 1, mm = m + 1;
		else
			dd = d + 1, mm = m;
	}
	return make_tuple(dd, mm, y);
}
int main()
{
	fastio()
	int n;
	while (cin >> n , n) {
		tuple<int, int, int> t[n];
		int cost[n];
		for (int i = 0; i < n; ++i) {
			int x, y, z;
			cin >> x >> y >> z;
			cin >> cost[i];
			t[i] = make_tuple(x, y, z);
		}
		int sum = 0, cnt = 0;
		for (int i = 0; i < n - 1; ++i) {
			int d, m, y;
			tie(d, m, y) = t[i];
			tuple<int, int, int> nxt_date = nextday(d, m, y);
			if (nxt_date == t[i + 1]) {
				++cnt, sum += cost[i + 1] - cost[i];
			}
		}
		cout << cnt << " " << sum << '\n';
	}
}
