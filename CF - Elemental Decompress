#include<bits/stdc++.h>
#ifndef ONLINE_JUDGE
#include "LOCAL_DEBUG.h"
#endif
#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL);
using namespace std;

void solve()
{
	int n, x; cin >> n;
	vector<int>a(n), p(n), q(n);
	map<int, bool> stkp, stkq;
	bool ok = true;
	for (int i = 1; i <= n; ++i) {
		stkp[i] = 1;
		stkq[i] = 1;
	}
	for (int i = 0; i < n; ++i) {
		cin >> a[i];
		x = a[i];
		if (stkp[x]) {
			p[i] = x;
			stkp.erase(x);
		}
		else if (stkq[x]) {
			q[i] = x;
			stkq.erase(x);
			stkp.erase(x);
		}
		else {
			ok = false;
			stkq.erase(x);
		}
	}
	if (!ok) {
		cout << "NO\n";
		return;
	}
	for (int i = 0; i < n; ++i) {
		if (p[i] == 0) {
			auto it = stkp.lower_bound(a[i]);

			while (it == stkp.end() || it->first > a[i]) {
				if (it == stkp.begin()) {
					cout << "NO\n";
					return;
				}
				--it;
			}
			p[i] = it->first;
			stkp.erase(it);
		}

	}
	for (int i = 0; i < n; ++i) {
		if (q[i] == 0) {
			auto it = stkq.lower_bound(a[i]);

			while (it == stkq.end() || it->first > a[i]) {
				if (it == stkq.begin()) {
					cout << "No\n";
					return;
				}
				--it;
			}
			q[i] = it->first;
			stkq.erase(it);
		}
	}
	cout << "YES\n";
	for (int& i : p) {
		cout << i << ' ';
	}
	cout << '\n';
	for (int& i : q) {
		cout << i << ' ';
	}
	cout << '\n';
}
int main()
{
	fastio()
	freopen("Error.txt", "w", stderr);
	int tc = 1;
	cin >> tc;
	while (tc--)
		solve();
}
